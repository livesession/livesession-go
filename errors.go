// This file was auto-generated by Fern from our API Definition.

package livesession

import (
	json "encoding/json"
	core "go.livesession.io/livesession-go/core"
)

// 400 response
type BadRequestError struct {
	*core.APIError
	Body *ErrorResponse
}

func (b *BadRequestError) UnmarshalJSON(data []byte) error {
	var body *ErrorResponse
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	b.StatusCode = 400
	b.Body = body
	return nil
}

func (b *BadRequestError) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.Body)
}

func (b *BadRequestError) Unwrap() error {
	return b.APIError
}

// 500 response
type InternalServerError struct {
	*core.APIError
	Body *ErrorResponse
}

func (i *InternalServerError) UnmarshalJSON(data []byte) error {
	var body *ErrorResponse
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	i.StatusCode = 500
	i.Body = body
	return nil
}

func (i *InternalServerError) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.Body)
}

func (i *InternalServerError) Unwrap() error {
	return i.APIError
}

// 404 response
type NotFoundError struct {
	*core.APIError
	Body interface{}
}

func (n *NotFoundError) UnmarshalJSON(data []byte) error {
	var body interface{}
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	n.StatusCode = 404
	n.Body = body
	return nil
}

func (n *NotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(n.Body)
}

func (n *NotFoundError) Unwrap() error {
	return n.APIError
}
